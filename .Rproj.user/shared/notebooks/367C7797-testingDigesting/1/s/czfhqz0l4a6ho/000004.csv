"0","### Required packages ------------------------------------------------------------------------------"
"0","require(""magrittr"")   # For pipes"
"0","require(""digest"")     # For hashing"
"0","require(""stringr"")    # For cleaning strings"
"0",""
"0","### Pretend this is you copying some data from an excel spreadsheet: -------------------------------"
"0","writeClipboard("
"0","""david.lovell@churcharmy.org"
"0","elspeth.mcgann@churcharmy.org"
"0","fiona.tweedie@churcharmy.org"
"0","andy.wier@churcharmy.org"
"0","tim.ling@churcharmy.org     "") # <- some whitespace there"
"0",""
"0","### clean up the data"
"0",""
"0","readClipboard() %>% "
"0","  as.character() %>% #Not sure if this is strictly neccesary, but a worthy precaution:"
"0","                     ## If `sha1()` gets hold of a double it will treat it differntly from a string "
"0","  (stringr::str_trim) %>% # remove whitespace"
"0","  (stringr::str_to_lower) -> # remove capital letters"
"0","  tmp"
"0",""
"0","### The code ---------------------------------------------------------------------------------------"
"0","### Now were explicitly using the SHA-1 alogrithm"
"0","### This function should work the same on 32 and 64 bit systems"
"0","### The 'digits' and 'zapsmall' arguments are here expicitly set to their defaults,"
"0","### which seems safest for transparent reproducibility. `sha1(.)` will give the same result as below,"
"0","### but any change to digits or zapsmall will give output at entirely different digest."
"0","tmp %>% sapply(digest::sha1(., digits = 14, zapsmall = 7)) %>% writeClipboard "
"2","Error in get(as.character(FUN), mode = ""function"", envir = envir) : 
  object 'ba0ca60e09ae1b96d73621d87bff449290007d87' of mode 'function' was not found
"
