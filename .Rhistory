leaders$points %>% sapply(length)
View(.[[1]][[51]])
View(.[[1]][[51]])
?geom_sf
ggmap(leaders) +
geom_sf(data = points,
inherit.aes = FALSE)
ggmap(leaders) +
geom_sf(data = points,
inherit.aes = FALSE)
require(ggmap)
ggmap(leaders) +
geom_sf(data = points,
inherit.aes = FALSE)
geom_sf(data = leaders)
ggplot()
ggplot() +
geom_sf(data = leaders)
ggplot() +
geom_sf(data = leaders,
aes = aes(geometry = points))
ggplot() +
geom_sf(data = leaders, aes(geometry = points))
View(.[[1]][[2]])
leaders$points
leaders$points
leaders$points %>% sfc()
?sfc
leaders$points %>% st_as_sfc
leaders %<>%
mutate(points = map(latLong,
~ {
if(is.numeric(unlist(.["lat"])) &&
is.numeric(unlist(.["lng"]))) {
st_point(c(unlist(.["lat"]),
unlist(.["lng"])))
} else {
NA
}}) %>%
#map(~
st_sfc(crs = "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs"))#)
leaders %<>%
mutate(points = map(latLong,
~ {
if(is.numeric(unlist(.["lat"])) &&
is.numeric(unlist(.["lng"]))) {
st_point(c(unlist(.["lat"]),
unlist(.["lng"])))
} else {
NA
}}) %T>%
class %>%
map(~ st_sfc(., crs = "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs")))
ggplot() +
geom_sf(data = leaders, aes(geometry = points))
leaders %<>%
mutate(points = map(latLong,
~ {
if(is.numeric(unlist(.["lat"])) &&
is.numeric(unlist(.["lng"]))) {
st_point(c(unlist(.["lat"]),
unlist(.["lng"])))
} else {
NA
}}) %T>%
{print(class(.))} %>%
map(~ st_sfc(., crs = "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs")))
leaders %<>%
mutate(points = map(latLong,
~ {
if(is.numeric(unlist(.["lat"])) &&
is.numeric(unlist(.["lng"]))) {
st_point(c(unlist(.["lat"]),
unlist(.["lng"])))
} else {
NA
}}) %T>%
{map(., ~ print(class(.)))} %>%
map(~ st_sfc(., crs = "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs")))
"X" %in% c("X", "jf")
leaders %<>%
mutate(points = map(latLong,
~ {
if(is.numeric(unlist(.["lat"])) &&
is.numeric(unlist(.["lng"]))) {
st_point(c(unlist(.["lat"]),
unlist(.["lng"])))
} else {
NA
}}) %T>%
{map(., ~ print(class(.)))} %>%
map(~ {
if(all(class(.) %in% c("XY", "POINT", "sfg"))) {
st_sfc(., crs = "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs")
} else
{
NA
}
}))
ggplot() +
geom_sf(data = leaders, aes(geometry = points))
leaders$points
q("no")
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp(here::here("app.R"),port = 6056,
display.mode = "normal")
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp(here::here("app.R"),port = 6056,
display.mode = "normal")
## This is a oneLine script that runs the shiny app on the right port
require("here")
runApp(here::here("app.R"),port = 6056,
display.mode = "normal")
setwd(choose.dir())
runApp(here::here("app.R"),port = 6056,
display.mode = "normal")
getwd()
runApp(here::here("app.R"),port = 6056,
display.mode = "normal")
source('runAppScript.R')
traceback()
rlang::last_error()
source('runAppScript.R')
runApp(here::here("app.R"),port = 6056,
display.mode = "normal")
source('runAppScript.R')
choose.dir()
runApp("app.R",port = 6056,
display.mode = "normal")
NA == 1
source('runAppScript.R')
source('runAppScript.R')
source('runAppScript.R')
runApp("app.R",port = 6056,
display.mode = "normal")
runApp("app.R",port = 6056,
display.mode = "normal")
?reactive
runApp("app.R",port = 6056,
display.mode = "normal")
runApp("app.R",port = 6056,
display.mode = "normal")
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
character(0) %in% 1
runApp("app.R",port = 6056,
display.mode = "normal")
NA %in% 1
runApp("app.R",port = 6056,
display.mode = "normal")
runApp("app.R",port = 6056,
display.mode = "normal")
runApp("app.R",port = 6056,
display.mode = "normal")
runApp("app.R",port = 6056,
display.mode = "normal")
this = "djdj"
{{this}}
{this
"{{this}}"
runApp("app.R",port = 6056,
display.mode = "normal")
getwd()
dir()
readRDS(survey1.rdat"")
readRDS("survey1.rdat")
readRDS(file.choose()) -> attenders
readRDS(file.choose()) -> attenders
names(attenders)
attenders %>% filter(ageGroup <6)
attenders %>% filter(ageGroup %in% c(1,2,3,4,5))
attenders %>% filter(ageGroup %in% c(1,2,3,4,5)) %>% select_if(!all %in% "(Missing)")
attenders %>% filter(ageGroup %in% c(1,2,3,4,5)) %>% select_if(~ !. %in% "(Missing)")
attenders %>% filter(ageGroup %in% c(1,2,3,4,5)) %>% select_if(~ !(all(.) %in% "(Missing)"))
attenders %>% filter(ageGroup %in% c(1,2,3,4,5)) %>% select_if(~ !(all(. %in% "(Missing)"))
)
attenders %>% filter(ageGroup %in% c(1,2,3,4,5)) %>% select_if(~ !(all(. %in% "(Missing)"))) %>% names
attenders %>% filter(ageGroup %in% c(1,2,3,4,5)) %>% select_if(~ !(all(. %in% "(Missing)")||all(is.na(.)))) %>% names
attenders %>%
filter(ageGroup %in% c(1,2,3,4,5)) %>%
select_if(~ !(all(. %in% "(Missing)")||all(is.na(.)))) %>%
names
attenders %>%
filter(ageGroup %in% c(1,2,3,4,5)) %>%
select_if(~ !(all(. %in% "(Missing)")||all(is.na(.)))) %T>%
names
attenders %>%
filter(ageGroup %in% c(1,2,3,4,5)) %>%
select_if(~ !(all(. %in% "(Missing)")||all(is.na(.)))) %T>%
print(names) %>%
select(-responseId, -plantId)
attenders %>%
filter(ageGroup %in% c(1,2,3,4,5)) %>%
select_if(~ !(all(. %in% "(Missing)")||all(is.na(.)))) %T>%
print(names) %>%
select(-responseId, -plantId,
-class1, -class2)
attenders %>%
filter(ageGroup %in% c(1,2,3,4,5)) %>%
select_if(~ !(all(. %in% "(Missing)")||all(is.na(.)))) %T>%
print(names) %>%
select(-responseId, -plantId,
-class1, -class2, - ethnicity)
attenders %>%
filter(ageGroup %in% c(1,2,3,4,5)) %>%
select_if(~ !(all(. %in% "(Missing)")||all(is.na(.)))) %T>%
print(names) %>%
select(-responseId, -plantId,
-class1, -class2, - ethnicity) %>%
names
attenders %>%
filter(ageGroup %in% c(1,2,3,4,5)) %>%
select_if(~ !(all(. %in% "(Missing)")||all(is.na(.)))) %T>%
print(names) %>%
select(-responseId, -plantId,
-class1, -class2, - ethnicity,
-note) %>%
names
attenders %>%
filter(ageGroup %in% c(1,2,3,4,5)) %>%
select_if(~ !(all(. %in% "(Missing)")||all(is.na(.)))) %T>%
print(names) %>%
select(-responseId, -plantId,
-class1, -class2, - ethnicity,
-note,-transferOther) %>%
names
print(names(attenders))
attenders %>%
filter(ageGroup %in% c("0")
)
attenders$ageGroup %>% unique
attenders %>% filter(ageGroup %in% as.character(0:10)) %>% pull(gender) %>% unique
attenders$responseType
attenders %>% filter(ageGroup %in% as.character(0:10)) %>% pull(statusChild)
attenders %>% filter(ageGroup %in% as.character(0:10)) %>% pull(class1)
attenders %>% filter(ageGroup %in% as.character(0:10)) %>% pull(class2)
attenders %>%
filter(ageGroup %in% c(1,2,3,4,5)) %>%
select_if(~ !(all(. %in% "(Missing)")||all(is.na(.)))) %T>%
print(names) %>%
select(-responseId, -plantId,
-class1, -class2, - ethnicity,
-note,-transferOther) %>%
names
names(attenders)
attenders$regularity
names(attenders)
levels(attenders$churchBackground)
levels(attenders$transferReason)
any(is.na(attenders$churchBackground))
c("this","that")[3]
c("male", "female")[1] %>%
replace(.,.==NA,"Missing")
c("male", "female")[3] %>%
replace(.,.==NA,"Missing")
attenders$gender %>% levels
replace(str_detect(6, "^([6-9]|(10))$"), "11-15")
"6" %>% {replace(., str_detect(., "^([6-9]|(10))$"), "11-15")}
"10" %>% {replace(., str_detect(., "^([6-9]|(10))$"), "11-15")}
"11" %>% {replace(., str_detect(., "^([6-9]|(10))$"), "11-15")}
attenders$higherEducation %>% levels
attenders$ethnicity %>% levels
attenders$statusChild %>% levels
names(attenders)
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
runApp("app.R",port = 6056,
display.mode = "normal")
runApp("app.R",port = 6056,
display.mode = "normal")
runApp("app.R",port = 6056,
display.mode = "normal")
dir()
tibble(location = dir() %>% {.[str_detect(.,".rdat$")]})
tibble(location = dir() %>% {.[str_detect(.,".rdat$")]}) -> data
data %>%
mutate(rdat = readRDS(location))
data %>% mutate(rdat = map(location, readRDS))
data %<>% mutate(rdat = map(location, readRDS))
data
data %>% summarise(list(rbind(rdat)))
data %>% summarise((rbind(rdat))
)
data %>% pull(rdat)
data %>% pull(rdat) %>% rbind()
data %>% pull(rdat) %>% purrr::reduce
data %>% pull(rdat) %>% (purrr::reduce(rbind))
data %>% pull(rdat)
data %>% pull(rdat) %>% (purrr::reduce(rbind))
traceback()
data %>% pull(rdat) %>% (purrr::reduce(cbind))
data %>% pull(rdat) %>% (purrr::reduce(~ cbind(unlist(.))))
require(purrr)
data %>% pull(rdat) %>% reduce(~ cbind(unlist(.)))
data %>% pull(rdat) %>% reduce(~ rbind(unlist(.)))
data %>% pull(rdat) %>% reduce(~ rbind)
data %>% pull(rdat) %>% reduce(~ rbind())
data %>% pull(rdat) %>% reduce(~ rbind(.))
data %>% pull(rdat) %>% reduce(~ cbind(.))
data %>% pull(rdat) -> tibList
tibList[[1]]
tibList[[1]] %>% rbind(tibList[[2]])
tibList %>% reduce(rbind)
data %>% pull(rdats) %>% reduce(rbind)
data %>% pull(rdat) %>% reduce(rbind)
thing <- tibble(location = dir() %>% {.[str_detect(.,"\\.rdat$")]}) %>%
mutate(file = map(location, readRDS)) %>%
pull(file) %>%
reduce(rbind)
thing
x <- (y<-2)
x
y
x <- y<-2)
1 <- (x <- (y<-2))
y <- (x <- (y<-2))
y
x
y
x
y <- (x <- y)
y
x
rm(x)
rm(y)
y <- (x <- y)
dir("O:\\WCC\\Learning and Development\\Research\\PROJECT - Portsmouth 2019 onwards\\Strand 1 - Leaders and Attenders Surveys\\Data\\surveyInterface\\www\\pdfs")
tibble(fxc <- dir(choose.dir(),full.names = TRUE))
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
runApp("app.R",port = 6056,
display.mode = "normal")
runApp("app.R",port = 6056,
display.mode = "normal")
### Split pdf into pages ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# pdfDir = choose.dir(here("www/pdfs"),"Choose folder to process PDFs from")
pdfDir <- choose.dir("O:\\WCC\\Learning and Development\\Research\\PROJECT - Portsmouth 2019 onwards\\Strand 1 - Leaders and Attenders Surveys\\Data\\surveyInterface\\www\\pdfs")
pdfFiles <- dir(pdfDir, full.names =  TRUE)[dir(pdfDir, full.names = TRUE) %>% str_detect("\\.pdf$")]
suppressWarnings(dir.create(paste0(pdfDir,"/output")))
pdf <- tibble(pageNo = 1:(length(pdfFiles)))
pdf <- pdf %>%
mutate(outputFile = map_chr(pageNo,
~{paste0(pdfDir,"\\", as.character(.), ".pdf")})) %>%
mutate(http = paste0("http:\\\\127.0.0.1:6056\\",
str_remove(outputFile, "^.+\\\\www\\\\")) %>%
str_replace_all("\\\\","/"))
pdf
pfs$http[1]
pdf$http[1]
install.packages("textUtils")
install.packages("textutils")
textutils::toHTML(pdf$http[1]))
textutils::toHTML(pdf$http[1])
require(textutils)
toHTML(pdf$http[1])
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
pdf <- tibble(pageNo = 1:(length(pdfFiles)))
pdf <- pdf %>%
mutate(outputFile = map_chr(pageNo,
~{paste0(pdfDir,"\\", as.character(.), ".pdf")})) %>%
mutate(http = paste0("http:\\\\127.0.0.1:6056\\",
str_remove(outputFile, "^.+\\\\www\\\\") %>%
str_replace_all("[:space:]","%20")) %>%
str_replace_all("\\\\","/"))
toHTML(pdf$http[1])
pdf$http[1]
knitr::opts_chunk$set(echo = TRUE)
pagesTib <-
tibble(location = paste0("fullResponses/",
dir(here::here("fullResponses")))) %>%
mutate(fxcName = location %>%
str_remove("(?<=^)fullResponses/") %>%
str_remove("\\.pdf(?=$)")) %>%
mutate(pages = map(here::here(location), pdf_length))
tibble(location = paste0("fullResponses/",
dir(here::here("fullResponses"))))
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
### Split pdf into pages ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# pdfDir = choose.dir(here("www/pdfs"),"Choose folder to process PDFs from")
pdfDir <- choose.dir(here::here())
dir(paste0(pdfDir,"/output"))
dir(paste0(pdfDir,"/output")) %>%
str_remove("\\D")
dir(paste0(pdfDir,"/output")) %>%
str_remove_all("\\D") %>%
as.numeric %>%
max + 1
runApp("app.R",port = 6056,
display.mode = "normal")
runApp("app.R",port = 6056,
display.mode = "normal")
max(1,NA)
max(NA)
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
dir(paste0(pdfDir,"/output")) %>%
str_remove_all("\\D") %>%
as.numeric %>%
max + 1
### Split pdf into pages ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# pdfDir = choose.dir(here("www/pdfs"),"Choose folder to process PDFs from")
pdfDir <- choose.dir(here::here())
## Initialise reactiveValues :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# start at the pdF that hasn't been created
startHere <-
dir(paste0(pdfDir,"/output")) %>%
str_remove_all("\\D") %>%
as.numeric %>%
max + 1
startHere
class(startHere)
-Inf
-Inf < 1
-Inf < -Inf
1 < -Inf
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
runApp("app.R",port = 6056,
display.mode = "normal")
## This is a oneLine script that runs the shiny app on the right port
require("here")
require("shiny")
require("shiny")runApp("app.R",port = 6056,
display.mode = "normal")
runApp("app.R",port = 6056,
display.mode = "normal")
q("no")
